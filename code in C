//code for egyption problem

/**
 *
 * @author Arifa
 */
 
#include<stdio.h>
int gcd(int a, int b);                  //declaring function for greatest common divisor
int simp(int a, int b);                 //declaring function for reduced form of fractions
void main()
{
  int n,i, u, m, k, a[10], d, b[10], sum=0, g;     //initialization of variables
  printf("ENTER THE NUMBER OF INSTANCES: ");       //printing statement for entering the number of instnces used
  scanf("%d",&n);                                   //scanning statement for n instances
  for(i=0;i<n;i++)                                 //loop condition for number of instances after one instance gets over
  {
      sum=0;
      d=0;
      printf("\n ENTER THE NUMBER OF FRACTIONS YOU WANT TO ADD: ");   //printing the number of fractions required
      scanf("%d", &m);                                                //scanning statement for m fractions
      printf("ENTER THE DENOMINATOR OF EACH EGYPTIAN FRACTION: ");    //printing the denominators of each fraction
      for(k=0; k<m;k++)                                               // loop condition for the denominators after one denominator is entered
      {

                  scanf("%d",&a[k]);                                   // scanning the denominators
             }

            if (m==1)                                                  // nested if condition for certin unique types of denominators
            {
                    printf("1/%d=1/%d",a[0],a[0]);                
            }
            else if(m==0)                                              // when denominator is 0 ,print error message 
            {
                    printf("ERROR!!NO FRACTION ENTERED");
            }
            else
            {
                    for(k=0; k<m-1;k++)
                    {
                            g = gcd(a[k],a[k+1]);                        // finding the gcd of the input denominators
                            d = a[k]*a[k+1]/g;
                    }
                    for(k=0; k<m;k++)
                    {
                            b[k]= d/ a[k];
                            sum= sum+ b[k];                              //statement for finding sum of the fractions 
                    }
// u= gcd(sum, d);
// sum= sum/u;
// d= d/u;
                     for(k=0;k<m-1;k++)
                     {
                            printf(" 1/%d +",a[k]);
                     }
                    printf(" 1/%d", a[m-1]);
                    simp(sum, d);                                   // finding reduced form of the sum and output answer
              }
      }
}
int gcd(int a, int b) {                                             //function declaration and defination for gcd    
  if (b == 0)
  return a;
  else
  return gcd(b, a % b);
}
int simp(int a,int b){                                               // function declaration and efination for reduced form
  int l=gcd(a,b);
  a= a/l;
  b= b/l;
  printf(" = %d/%d", a,b);
}
